apply plugin: 'com.android.application'
apply plugin: 'auto-patch-plugin'
apply plugin: 'robust'


android {
    compileSdkVersion rootProject.ext.COMPILE_SDK_VERSION
    buildToolsVersion rootProject.ext.BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.dansejijie.library"
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.TARGET_SDK_VERSION
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        manifestPlaceholders=[xxx:"xxx",yyy:"yyy"]

        multiDexEnabled true
    }

    signingConfigs {
        release{
            storeFile file(project.RELEASE_STORE_FILE)
            storePassword project.RELEASE_STORE_PASSWORD
            keyAlias project.RELEASE_KEY_ALIAS
            keyPassword project.RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }

    sourceSets{
        main{
            res.srcDirs=[
                    'src/main/res',
                    'src/main/res/layouts',
                    'src/main/res/layouts/amuse',
            ]
        }
    }


    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:${rootProject.ext.SUPPORT_VERSION}"
    compile project(':utils')
    compile project(':widget')
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.facebook.fresco:fresco:1.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.meituan.robust:robust:0.3.0'
    compile project(':library')
}
